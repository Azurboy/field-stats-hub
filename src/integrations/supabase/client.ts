
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jweeanpqogiqspyshbzs.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp3ZWVhbnBxb2dpcXNweXNoYnpzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc5MTA5OTAsImV4cCI6MjA2MzQ4Njk5MH0.UlqCIyG7p2I3h85j2MZkDSW8alaJduo31pB5jLh4sU4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to get a default owner ID for development
// This should be replaced with actual auth in production
export const getDefaultOwnerId = async (): Promise<string> => {
  // Try to use an existing session
  const { data: { session } } = await supabase.auth.getSession();
  
  if (session?.user?.id) {
    return session.user.id;
  }
  
  // If no session exists, sign in anonymously
  // Note: This is for development only and should be replaced with proper auth
  const { data, error } = await supabase.auth.signInAnonymously();
  
  if (error) {
    console.error('Error signing in anonymously:', error);
    // Return a fallback ID - this is not ideal but will prevent immediate errors
    return 'default-owner';
  }
  
  return data.user?.id || 'default-owner';
};
